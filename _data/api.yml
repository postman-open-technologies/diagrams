openapi: 3.0.0
info:
  title: Diagrams
  description: This is of the diagrams API.
  version: "v1"
servers:
  - url: "https://pt5fqvxp05.execute-api.us-west-1.amazonaws.com/staging"
paths:
  /diagrams:
    get:
      summary: Diagrams
      description: Returns all of the diagrams.
      parameters:
        - name: limit
          in: query
          required: false
          example: 25
          schema:
            type: string
        - name: page
          in: query
          required: false
          example: 0
          schema:
            type: string
        - name: search
          in: query
          required: false
          example: ''
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagrams'
      x-amazon-apigateway-integration:
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:780401591112:function:m-s-diagrams-g/invocations
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.page: method.request.querystring.page
          integration.request.querystring.limit: method.request.querystring.limit
          integration.request.querystring.search: method.request.querystring.search
          integration.request.querystring.tags: method.request.querystring.tags
        requestTemplates:
          application/json: |-
            {
                "page" : "$input.params('page')",
                "limit" : "$input.params('limit')",
                "search" : "$input.params('search')",
                "tags" : "$input.params('tags')"
            }
        passthroughBehavior: when_no_templates
        contentHandling: CONVERT_TO_TEXT
        type: aws
    post:
      summary: Diagram
      description: Adds a diagram.
      requestBody:
        $ref: '#/components/requestBodies/Diagram'
      responses:
        '201':
          description: 201 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagram'
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:780401591112:function:m-s-diagrams-po/invocations
        responses:
          default:
            statusCode: '201'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
        type: aws
    options:
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: when_no_match
        type: mock
  '/diagrams/{diagram_id}':
    get:
      summary: Diagram
      description: Return and individual diagrams.
      parameters:
        - name: diagram_id
          in: path
          required: true
          example: 857
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagram'
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:780401591112:function:m-s-diagrams-diagram-g/invocations
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.path.diagram_id: method.request.path.diagram_id
        requestTemplates:
          application/json: |-
            {
                "diagram_id" : "$input.params('diagram_id')"
            }
        passthroughBehavior: when_no_templates
        contentHandling: CONVERT_TO_TEXT
        type: aws
    put:
      summary: Diagram
      description: Updates a diagram.
      parameters:
        - name: diagram_id
          in: path
          required: true
          example: 857
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Diagram'
      responses:
        '204':
          description: 204 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:780401591112:function:m-s-diagrams-diagram-pu/invocations
        responses:
          default:
            statusCode: '204'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.path.diagram_id: method.request.path.diagram_id
        requestTemplates:
          application/json: |-
            {
                "diagram_id" : "$input.params('diagram_id')",
                "body" : $input.json('$') 
            }
        passthroughBehavior: when_no_templates
        contentHandling: CONVERT_TO_TEXT
        type: aws
    delete:
      summary: Diagram
      description: Deltes a diagram.
      parameters:
        - name: diagram_id
          in: path
          required: true
          example: 857
          schema:
            type: string
      responses:
        '204':
          description: 204 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:780401591112:function:m-s-diagrams-diagram-d/invocations
        responses:
          default:
            statusCode: '204'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.path.diagram_id: method.request.path.diagram_id
        requestTemplates:
          application/json: |-
            {
                "diagram_id" : "$input.params('diagram_id')"
            }
        passthroughBehavior: when_no_templates
        contentHandling: CONVERT_TO_TEXT
        type: aws
    options:
      parameters:
        - name: diagram_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS,DELETE,PUT'''
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: when_no_match
        type: mock
components:
  requestBodies:
    Diagram:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Diagram'
          example:
            name: Example Image
            description: The description.
            url: https://example.com/
            image: https://example.com/image.jpeg             
      required: true    
  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header
  schemas:
    Diagrams:
      type: array
      items:
        $ref: '#/components/schemas/Diagram'
      example:
        - id: 857
          name: Example Image
          description: The description.
          url: https://example.com/
          image: https://example.com/image.jpeg          
    Diagram:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        version:
          type: string
        description:
          type: string
        url:
          type: string
      example:
        id: 857
        name: Example Image
        description: The description.
        url: https://example.com/
        image: https://example.com/image.jpeg            
